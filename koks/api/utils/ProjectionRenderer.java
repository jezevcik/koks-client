package koks.api.utils;

import god.buddy.aot.BCompiler;
import koks.api.Methods;
import koks.api.utils.math.Vector2d;
import koks.api.utils.math.Vector3d;
import net.minecraft.client.renderer.ActiveRenderInfo;
import net.minecraft.entity.Entity;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.AxisAlignedBB;
import org.lwjgl.BufferUtils;
import org.lwjgl.opengl.GL11;

import java.awt.*;
import java.util.ArrayList;
import java.util.List;
import java.nio.FloatBuffer;

import org.lwjgl.util.glu.GLU;

import java.util.Arrays;

/*
 * Created on 4/16/2021 by dirt.
 */
public class ProjectionRenderer implements Methods {

    public static ProjectionRenderer projectionRenderer = new ProjectionRenderer();
    private final FloatBuffer winPos = BufferUtils.createFloatBuffer(16);

    private void render2DOutline(Vector2d minPos, Vector2d maxPos, Color color) {
        GL11.glPushMatrix();
        GL11.glDisable(GL11.GL_TEXTURE_2D);
        float size = 1f;
        GL11.glLineWidth(size * 3);
        GL11.glPointSize(size * 3);
        RenderUtil.getInstance().setColor(Color.black);
        // outline
        GL11.glBegin(GL11.GL_LINE_STRIP);
        GL11.glVertex2d(minPos.getX(), minPos.getY());
        GL11.glVertex2d(minPos.getX(), maxPos.getY());
        GL11.glVertex2d(maxPos.getX(), maxPos.getY());
        GL11.glVertex2d(maxPos.getX(), minPos.getY());
        GL11.glVertex2d(minPos.getX(), minPos.getY());
        GL11.glEnd();
        // fix the corners
        GL11.glBegin(GL11.GL_POINTS);
        GL11.glVertex2d(minPos.getX(), minPos.getY());
        GL11.glVertex2d(minPos.getX(), maxPos.getY());
        GL11.glVertex2d(maxPos.getX(), maxPos.getY());
        GL11.glVertex2d(maxPos.getX(), minPos.getY());
        GL11.glVertex2d(minPos.getX(), minPos.getY());
        GL11.glEnd();

        // inner line
        GL11.glLineWidth(size);
        GL11.glPointSize(size);
        RenderUtil.getInstance().setColor(color);
        GL11.glBegin(GL11.GL_LINE_STRIP);
        GL11.glVertex2d(minPos.getX(), minPos.getY());
        GL11.glVertex2d(minPos.getX(), maxPos.getY());
        GL11.glVertex2d(maxPos.getX(), maxPos.getY());
        GL11.glVertex2d(maxPos.getX(), minPos.getY());
        GL11.glVertex2d(minPos.getX(), minPos.getY());
        GL11.glEnd();
        // fix the corners
        GL11.glBegin(GL11.GL_POINTS);
        GL11.glVertex2d(minPos.getX(), minPos.getY());
        GL11.glVertex2d(minPos.getX(), maxPos.getY());
        GL11.glVertex2d(maxPos.getX(), maxPos.getY());
        GL11.glVertex2d(maxPos.getX(), minPos.getY());
        GL11.glVertex2d(minPos.getX(), minPos.getY());
        GL11.glEnd();
        GL11.glEnable(GL11.GL_TEXTURE_2D);
        GL11.glPopMatrix();
    }

    @BCompiler(aot = BCompiler.AOT.AGGRESSIVE)
    public void render2DESP(Entity entity, Color color) {
        /*\u002a\u002f\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0041\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u0020\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u003d\u0065\u006e\u0074\u0069\u0074\u0079\u002e\u0067\u0065\u0074\u0045\u006e\u0074\u0069\u0074\u0079\u0042\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0042\u006f\u0078\u0028\u0029\u002e\u006f\u0066\u0066\u0073\u0065\u0074\u0028\u002d\u0065\u006e\u0074\u0069\u0074\u0079\u002e\u0070\u006f\u0073\u0058\u002c\u002d\u0065\u006e\u0074\u0069\u0074\u0079\u002e\u0070\u006f\u0073\u0059\u002c\u002d\u0065\u006e\u0074\u0069\u0074\u0079\u002e\u0070\u006f\u0073\u005a\u0029\u002e\u006f\u0066\u0066\u0073\u0065\u0074\u0028\u0069\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065\u0028\u0065\u006e\u0074\u0069\u0074\u0079\u002e\u006c\u0061\u0073\u0074\u0054\u0069\u0063\u006b\u0050\u006f\u0073\u0058\u002c\u0065\u006e\u0074\u0069\u0074\u0079\u002e\u0070\u006f\u0073\u0058\u0029\u002c\u0069\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065\u0028\u0065\u006e\u0074\u0069\u0074\u0079\u002e\u006c\u0061\u0073\u0074\u0054\u0069\u0063\u006b\u0050\u006f\u0073\u0059\u002c\u0065\u006e\u0074\u0069\u0074\u0079\u002e\u0070\u006f\u0073\u0059\u0029\u002c\u0069\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065\u0028\u0065\u006e\u0074\u0069\u0074\u0079\u002e\u006c\u0061\u0073\u0074\u0054\u0069\u0063\u006b\u0050\u006f\u0073\u005a\u002c\u0065\u006e\u0074\u0069\u0074\u0079\u002e\u0070\u006f\u0073\u005a\u0029\u0029\u002e\u006f\u0066\u0066\u0073\u0065\u0074\u0028\u002d\u006d\u0063\u002e\u0067\u0065\u0074\u0052\u0065\u006e\u0064\u0065\u0072\u004d\u0061\u006e\u0061\u0067\u0065\u0072\u0028\u0029\u002e\u0072\u0065\u006e\u0064\u0065\u0072\u0050\u006f\u0073\u0058\u002c\u002d\u006d\u0063\u002e\u0067\u0065\u0074\u0052\u0065\u006e\u0064\u0065\u0072\u004d\u0061\u006e\u0061\u0067\u0065\u0072\u0028\u0029\u002e\u0072\u0065\u006e\u0064\u0065\u0072\u0050\u006f\u0073\u0059\u002c\u002d\u006d\u0063\u002e\u0067\u0065\u0074\u0052\u0065\u006e\u0064\u0065\u0072\u004d\u0061\u006e\u0061\u0067\u0065\u0072\u0028\u0029\u002e\u0072\u0065\u006e\u0064\u0065\u0072\u0050\u006f\u0073\u005a\u0029\u003b\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0028\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002c\u0063\u006f\u006c\u006f\u0072\u0029\u003b\u002f\u002a*/
    }

    @BCompiler(aot = BCompiler.AOT.AGGRESSIVE)
    public void render2DESP(TileEntity tileEntity, Color color) {
        /*\u002a\u002f\u0069\u0066\u0028\u0074\u0069\u006c\u0065\u0045\u006e\u0074\u0069\u0074\u0079\u0021\u003d\u006e\u0075\u006c\u006c\u0026\u0026\u0074\u0069\u006c\u0065\u0045\u006e\u0074\u0069\u0074\u0079\u002e\u0067\u0065\u0074\u0057\u006f\u0072\u006c\u0064\u004f\u0062\u006a\u0028\u0029\u0021\u003d\u006e\u0075\u006c\u006c\u0026\u0026\u0074\u0069\u006c\u0065\u0045\u006e\u0074\u0069\u0074\u0079\u002e\u0067\u0065\u0074\u0050\u006f\u0073\u0028\u0029\u0021\u003d\u006e\u0075\u006c\u006c\u0026\u0026\u0074\u0069\u006c\u0065\u0045\u006e\u0074\u0069\u0074\u0079\u002e\u0067\u0065\u0074\u0042\u006c\u006f\u0063\u006b\u0054\u0079\u0070\u0065\u0028\u0029\u0021\u003d\u006e\u0075\u006c\u006c\u0029\u007b\u0041\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u0020\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u003d\u0074\u0069\u006c\u0065\u0045\u006e\u0074\u0069\u0074\u0079\u002e\u0067\u0065\u0074\u0042\u006c\u006f\u0063\u006b\u0054\u0079\u0070\u0065\u0028\u0029\u002e\u0067\u0065\u0074\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0042\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0042\u006f\u0078\u0028\u006d\u0063\u002e\u0074\u0068\u0065\u0057\u006f\u0072\u006c\u0064\u002c\u0074\u0069\u006c\u0065\u0045\u006e\u0074\u0069\u0074\u0079\u002e\u0067\u0065\u0074\u0050\u006f\u0073\u0028\u0029\u0029\u002e\u006f\u0066\u0066\u0073\u0065\u0074\u0028\u002d\u006d\u0063\u002e\u0067\u0065\u0074\u0052\u0065\u006e\u0064\u0065\u0072\u004d\u0061\u006e\u0061\u0067\u0065\u0072\u0028\u0029\u002e\u0072\u0065\u006e\u0064\u0065\u0072\u0050\u006f\u0073\u0058\u002c\u002d\u006d\u0063\u002e\u0067\u0065\u0074\u0052\u0065\u006e\u0064\u0065\u0072\u004d\u0061\u006e\u0061\u0067\u0065\u0072\u0028\u0029\u002e\u0072\u0065\u006e\u0064\u0065\u0072\u0050\u006f\u0073\u0059\u002c\u002d\u006d\u0063\u002e\u0067\u0065\u0074\u0052\u0065\u006e\u0064\u0065\u0072\u004d\u0061\u006e\u0061\u0067\u0065\u0072\u0028\u0029\u002e\u0072\u0065\u006e\u0064\u0065\u0072\u0050\u006f\u0073\u005a\u0029\u003b\u0074\u0068\u0069\u0073\u002e\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0028\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002c\u0063\u006f\u006c\u006f\u0072\u0029\u003b\u007d\u002f\u002a*/
    }

    @BCompiler(aot = BCompiler.AOT.AGGRESSIVE)
    public void calculate(AxisAlignedBB axisAlignedBB, Color color) {
        /*\u002a\u002f\u004c\u0069\u0073\u0074\u003c\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u003e\u0076\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u004c\u0069\u0073\u0074\u003d\u0041\u0072\u0072\u0061\u0079\u0073\u002e\u0061\u0073\u004c\u0069\u0073\u0074\u0028\u006e\u0065\u0077\u0020\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u0028\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0069\u006e\u0058\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0069\u006e\u0059\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0069\u006e\u005a\u0029\u002c\u006e\u0065\u0077\u0020\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u0028\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0069\u006e\u0058\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0061\u0078\u0059\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0069\u006e\u005a\u0029\u002c\u006e\u0065\u0077\u0020\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u0028\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0061\u0078\u0058\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0069\u006e\u0059\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0069\u006e\u005a\u0029\u002c\u006e\u0065\u0077\u0020\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u0028\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0061\u0078\u0058\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0061\u0078\u0059\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0069\u006e\u005a\u0029\u002c\u006e\u0065\u0077\u0020\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u0028\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0069\u006e\u0058\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0069\u006e\u0059\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0061\u0078\u005a\u0029\u002c\u006e\u0065\u0077\u0020\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u0028\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0069\u006e\u0058\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0061\u0078\u0059\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0061\u0078\u005a\u0029\u002c\u006e\u0065\u0077\u0020\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u0028\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0061\u0078\u0058\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0069\u006e\u0059\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0061\u0078\u005a\u0029\u002c\u006e\u0065\u0077\u0020\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u0028\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0061\u0078\u0058\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0061\u0078\u0059\u002c\u0061\u0078\u0069\u0073\u0041\u006c\u0069\u0067\u006e\u0065\u0064\u0042\u0042\u002e\u006d\u0061\u0078\u005a\u0029\u0029\u003b\u006d\u0063\u002e\u0065\u006e\u0074\u0069\u0074\u0079\u0052\u0065\u006e\u0064\u0065\u0072\u0065\u0072\u002e\u0073\u0065\u0074\u0075\u0070\u0043\u0061\u006d\u0065\u0072\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0028\u006d\u0063\u002e\u0074\u0069\u006d\u0065\u0072\u002e\u0072\u0065\u006e\u0064\u0065\u0072\u0050\u0061\u0072\u0074\u0069\u0061\u006c\u0054\u0069\u0063\u006b\u0073\u002c\u0030\u0029\u003b\u0056\u0065\u0063\u0074\u006f\u0072\u0032\u0064\u0020\u006d\u0069\u006e\u0050\u006f\u0073\u003d\u006e\u0075\u006c\u006c\u003b\u0056\u0065\u0063\u0074\u006f\u0072\u0032\u0064\u0020\u006d\u0061\u0078\u0050\u006f\u0073\u003d\u006e\u0075\u006c\u006c\u003b\u0077\u0069\u006e\u0050\u006f\u0073\u002e\u0063\u006c\u0065\u0061\u0072\u0028\u0029\u003b\u0066\u006f\u0072\u0028\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u0020\u0076\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u003a\u0076\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u004c\u0069\u0073\u0074\u0029\u007b\u0069\u0066\u0028\u0047\u004c\u0055\u002e\u0067\u006c\u0075\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0028\u0028\u0066\u006c\u006f\u0061\u0074\u0029\u0076\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u002e\u0067\u0065\u0074\u0058\u0028\u0029\u002c\u0028\u0066\u006c\u006f\u0061\u0074\u0029\u0076\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u002e\u0067\u0065\u0074\u0059\u0028\u0029\u002c\u0028\u0066\u006c\u006f\u0061\u0074\u0029\u0076\u0065\u0063\u0074\u006f\u0072\u0033\u0064\u002e\u0067\u0065\u0074\u005a\u0028\u0029\u002c\u0041\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006e\u0064\u0065\u0072\u0049\u006e\u0066\u006f\u002e\u004d\u004f\u0044\u0045\u004c\u0056\u0049\u0045\u0057\u002c\u0041\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006e\u0064\u0065\u0072\u0049\u006e\u0066\u006f\u002e\u0050\u0052\u004f\u004a\u0045\u0043\u0054\u0049\u004f\u004e\u002c\u0041\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006e\u0064\u0065\u0072\u0049\u006e\u0066\u006f\u002e\u0056\u0049\u0045\u0057\u0050\u004f\u0052\u0054\u002c\u0077\u0069\u006e\u0050\u006f\u0073\u0029\u0029\u007b\u0069\u0066\u0028\u0077\u0069\u006e\u0050\u006f\u0073\u002e\u0067\u0065\u0074\u0028\u0032\u0029\u003e\u0031\u0029\u007b\u0063\u006f\u006e\u0074\u0069\u006e\u0075\u0065\u003b\u007d\u0020\u0056\u0065\u0063\u0074\u006f\u0072\u0032\u0064\u0020\u0063\u006f\u006f\u0072\u0064\u0073\u003d\u006e\u0065\u0077\u0020\u0056\u0065\u0063\u0074\u006f\u0072\u0032\u0064\u0028\u0077\u0069\u006e\u0050\u006f\u0073\u002e\u0067\u0065\u0074\u0028\u0030\u0029\u002f\u0052\u0065\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u002e\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0028\u0029\u002e\u0067\u0065\u0074\u0053\u0063\u0061\u006c\u0065\u0028\u0029\u002c\u0028\u006d\u0063\u002e\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0048\u0065\u0069\u0067\u0068\u0074\u002d\u0077\u0069\u006e\u0050\u006f\u0073\u002e\u0067\u0065\u0074\u0028\u0031\u0029\u0029\u002f\u0052\u0065\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u002e\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0028\u0029\u002e\u0067\u0065\u0074\u0053\u0063\u0061\u006c\u0065\u0028\u0029\u0029\u003b\u0069\u0066\u0028\u006d\u0069\u006e\u0050\u006f\u0073\u003d\u003d\u006e\u0075\u006c\u006c\u0029\u007b\u006d\u0069\u006e\u0050\u006f\u0073\u003d\u006e\u0065\u0077\u0020\u0056\u0065\u0063\u0074\u006f\u0072\u0032\u0064\u0028\u0063\u006f\u006f\u0072\u0064\u0073\u002e\u0067\u0065\u0074\u0058\u0028\u0029\u002c\u0063\u006f\u006f\u0072\u0064\u0073\u002e\u0067\u0065\u0074\u0059\u0028\u0029\u0029\u003b\u006d\u0061\u0078\u0050\u006f\u0073\u003d\u006e\u0065\u0077\u0020\u0056\u0065\u0063\u0074\u006f\u0072\u0032\u0064\u0028\u0063\u006f\u006f\u0072\u0064\u0073\u002e\u0067\u0065\u0074\u0058\u0028\u0029\u002c\u0063\u006f\u006f\u0072\u0064\u0073\u002e\u0067\u0065\u0074\u0059\u0028\u0029\u0029\u003b\u007d\u0020\u006d\u0069\u006e\u0050\u006f\u0073\u002e\u0073\u0065\u0074\u0058\u0028\u004d\u0061\u0074\u0068\u002e\u006d\u0069\u006e\u0028\u0063\u006f\u006f\u0072\u0064\u0073\u002e\u0067\u0065\u0074\u0058\u0028\u0029\u002c\u006d\u0069\u006e\u0050\u006f\u0073\u002e\u0067\u0065\u0074\u0058\u0028\u0029\u0029\u0029\u003b\u006d\u0069\u006e\u0050\u006f\u0073\u002e\u0073\u0065\u0074\u0059\u0028\u004d\u0061\u0074\u0068\u002e\u006d\u0069\u006e\u0028\u0063\u006f\u006f\u0072\u0064\u0073\u002e\u0067\u0065\u0074\u0059\u0028\u0029\u002c\u006d\u0069\u006e\u0050\u006f\u0073\u002e\u0067\u0065\u0074\u0059\u0028\u0029\u0029\u0029\u003b\u006d\u0061\u0078\u0050\u006f\u0073\u002e\u0073\u0065\u0074\u0058\u0028\u004d\u0061\u0074\u0068\u002e\u006d\u0061\u0078\u0028\u0063\u006f\u006f\u0072\u0064\u0073\u002e\u0067\u0065\u0074\u0058\u0028\u0029\u002c\u006d\u0061\u0078\u0050\u006f\u0073\u002e\u0067\u0065\u0074\u0058\u0028\u0029\u0029\u0029\u003b\u006d\u0061\u0078\u0050\u006f\u0073\u002e\u0073\u0065\u0074\u0059\u0028\u004d\u0061\u0074\u0068\u002e\u006d\u0061\u0078\u0028\u0063\u006f\u006f\u0072\u0064\u0073\u002e\u0067\u0065\u0074\u0059\u0028\u0029\u002c\u006d\u0061\u0078\u0050\u006f\u0073\u002e\u0067\u0065\u0074\u0059\u0028\u0029\u0029\u0029\u003b\u007d\u007d\u0020\u006d\u0063\u002e\u0065\u006e\u0074\u0069\u0074\u0079\u0052\u0065\u006e\u0064\u0065\u0072\u0065\u0072\u002e\u0073\u0065\u0074\u0075\u0070\u004f\u0076\u0065\u0072\u006c\u0061\u0079\u0052\u0065\u006e\u0064\u0065\u0072\u0069\u006e\u0067\u0028\u0029\u003b\u0069\u0066\u0028\u006d\u0069\u006e\u0050\u006f\u0073\u0021\u003d\u006e\u0075\u006c\u006c\u0029\u007b\u0069\u0066\u0028\u006d\u0069\u006e\u0050\u006f\u0073\u002e\u0067\u0065\u0074\u0058\u0028\u0029\u003e\u003d\u0030\u007c\u007c\u006d\u0069\u006e\u0050\u006f\u0073\u002e\u0067\u0065\u0074\u0059\u0028\u0029\u003e\u003d\u0030\u007c\u007c\u006d\u0061\u0078\u0050\u006f\u0073\u002e\u0067\u0065\u0074\u0058\u0028\u0029\u003c\u003d\u0052\u0065\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u002e\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0028\u0029\u002e\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068\u0028\u0029\u007c\u007c\u006d\u0061\u0078\u0050\u006f\u0073\u002e\u0067\u0065\u0074\u0059\u0028\u0029\u003c\u003d\u0052\u0065\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u002e\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0028\u0029\u002e\u0067\u0065\u0074\u0048\u0065\u0069\u0067\u0068\u0074\u0028\u0029\u0029\u007b\u0072\u0065\u006e\u0064\u0065\u0072\u0032\u0044\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0028\u006d\u0069\u006e\u0050\u006f\u0073\u002c\u006d\u0061\u0078\u0050\u006f\u0073\u002c\u0063\u006f\u006c\u006f\u0072\u0029\u003b\u007d\u007d\u002f\u002a*/
    }

    //This method just keeps the imports looks like there are used that no one delete them.
    private void thisDoesNothing() {
        FloatBuffer buffer = ActiveRenderInfo.PROJECTION;
        new AxisAlignedBB(0, 0, 0, 0, 0, 0);
        float width = Resolution.getResolution().width;
        new Vector3d(0, 0, 0);
        new Vector2d(0, 0);
        List<String> list = new ArrayList<String>();
        int lol = GLU.GLU_FILL;
        Arrays.asList(new int[]{});
    }
}
