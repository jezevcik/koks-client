package koks.module.misc;

import koks.api.event.Event;
import koks.api.manager.value.annotation.Value;
import koks.api.registry.module.Module;
import koks.event.PacketEvent;
import koks.event.UpdateEvent;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.network.Packet;
import net.minecraft.network.play.server.S27PacketExplosion;
import net.minecraft.network.play.server.S2APacketParticles;

/**
 * @author kroko
 * @created on 01.02.2021 : 01:18
 */

@Module.Info(name = "ExploitFixer", description = "You doesn't affect from Exploits", category = Module.Category.MISC)
public class ExploitFixer extends Module implements Module.NotBypass {

    @Value(name = "Invalid Movement Attribute")
    boolean invalidMovementAttributeFix = true;

    @Value(name = "Invalid Sign")
    boolean invalidSignFix = true;

    @Value(name = "Explosion Crash Fix")
    boolean explosionCrashFix = true;

    @Value(name = "Particle Crash Fix")
    boolean particleCrashFix = true;


    @Override
    @Event.Info
    public void onEvent(Event event) {
        if (event instanceof PacketEvent packetEvent) {
            final Packet<?> packet = packetEvent.getPacket();
            if (packet instanceof S2APacketParticles particlesPacket) {
                if(particleCrashFix) {
                    if(Math.abs(particlesPacket.getParticleSpeed()) > 10) {
                        event.setCanceled(true);
                    }
                    if(particlesPacket.getParticleCount() > 500) {
                        event.setCanceled(true);
                    }
                }
            }
            if (packet instanceof S27PacketExplosion explosionPacket) {
                if (explosionCrashFix)
                    if (Math.abs(explosionPacket.getStrength()) > 99 || Math.abs(explosionPacket.getMotionX()) > 99 || Math.abs(explosionPacket.getMotionY()) > 99 || Math.abs(explosionPacket.getMotionZ()) > 99) {
                        event.setCanceled(true);
                    }
            }
        }
    }

    @Override
    public void onEnable() {

    }

    @Override
    public void onDisable() {

    }
}
